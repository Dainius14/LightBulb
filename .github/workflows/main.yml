name: main

on:
  push:
  pull_request:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  test:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # 4.1.0

      - name: Install .NET
        uses: actions/setup-dotnet@3447fd6a9f9e57506b15f895c5b76d3b197dc7c2 # 3.2.0
        with:
          dotnet-version: 7.0.x

      - name: Run tests
        run: >
          dotnet test
          --configuration Release
          --logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true"
          --collect:"XPlat Code Coverage"
          --
          RunConfiguration.CollectSourceInformation=true
          DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Upload coverage
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # 3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  pack:
    runs-on: windows-latest
    permissions:
      actions: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # 4.1.0

      - name: Install .NET
        uses: actions/setup-dotnet@3447fd6a9f9e57506b15f895c5b76d3b197dc7c2 # 3.2.0
        with:
          dotnet-version: 7.0.x

      - name: Publish app
        run: >
          dotnet publish LightBulb
          --output LightBulb/bin/publish/
          --configuration Release

      - name: Create installer
        shell: pwsh
        run: |
          choco install innosetup --no-progress
          Copy-Item -Path LightBulb/bin/publish/ -Recurse -Destination Installer/Source/
          & "c:\Program Files (x86)\Inno Setup 6\ISCC.exe" Installer/Installer.iss

      - name: Upload artifacts (portable)
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # 3.1.3
        with:
          name: LightBulb
          path: LightBulb/bin/publish/
          if-no-files-found: error

      - name: Upload artifacts (installer)
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # 3.1.3
        with:
          name: LightBulb-Installer
          path: Installer/bin/LightBulb-Installer.exe
          if-no-files-found: error

  deploy:
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}

    needs:
      - test
      - pack

    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write

    steps:
      - name: Download artifacts (portable)
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # 3.0.2
        with:
          name: LightBulb
          path: LightBulb/

      - name: Download artifacts (installer)
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # 3.0.2
        with:
          name: LightBulb-Installer

      - name: Create package (portable)
        # Change into the artifacts directory to avoid including the directory itself in the zip archive
        working-directory: LightBulb/
        run: zip -r ../LightBulb.zip .

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          gh release create ${{ github.ref_name }}
          LightBulb.zip
          LightBulb-Installer.exe
          --repo ${{ github.event.repository.full_name }}
          --title ${{ github.ref_name }}
          --notes "[Changelog](${{ github.event.repository.html_url }}/blob/${{ github.ref_name }}/Changelog.md)"
          --verify-tag

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Notify Discord
        uses: tyrrrz/action-http-request@64c70c67f5ebc54d4c7ea09cbe3553322778afd5 # 1.1.2
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "avatar_url": "https://raw.githubusercontent.com/${{ github.event.repository.full_name }}/${{ github.ref_name }}/favicon.png",
              "content": "**${{ github.event.repository.name }}** v${{ github.ref_name }} has been released!\nðŸ”— [Download](<${{ github.event.repository.html_url }}/releases/tag/${{ github.ref_name }}>) â€¢ [Changelog](<${{ github.event.repository.html_url }}/blob/${{ github.ref_name }}/Changelog.md>)"
            }
          retry-count: 5
