name: main

on: [push, pull_request]

jobs:
  test:
    runs-on: windows-latest

    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Run tests
        # Tests need access to secrets, so we can't run them against PRs because of limited trust
        if: ${{ github.event_name != 'pull_request' }}
        run: dotnet test --configuration Release --logger GitHubActions --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  package:
    needs: test
    runs-on: windows-latest

    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Publish
        run: dotnet publish LightBulb/ -o LightBulb/bin/Publish/ --configuration Release

      - name: Create installer
        run: |
          choco install innosetup --no-progress
          Copy-Item -Path LightBulb/bin/Publish/ -Recurse -Destination Installer/Source/
          & "c:\Program Files (x86)\Inno Setup 6\ISCC.exe" Installer/Installer.iss
        shell: pwsh

      - name: Upload artifacts (portable)
        uses: actions/upload-artifact@v3
        with:
          name: LightBulb
          path: LightBulb/bin/Publish/

      - name: Upload artifacts (installer)
        uses: actions/upload-artifact@v3
        with:
          name: LightBulb-Installer
          path: Installer/bin/LightBulb-Installer.exe

  deploy:
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    needs: package
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts (portable)
        uses: actions/download-artifact@v3
        with:
          name: LightBulb
          path: LightBulb

      - name: Download artifacts (installer)
        uses: actions/download-artifact@v3
        with:
          name: LightBulb-Installer

      - name: Create package (portable)
        run: Compress-Archive -Path LightBulb/* -DestinationPath LightBulb.zip -Force
        shell: pwsh

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            LightBulb.zip
            LightBulb-Installer.exe
          body: |
            [Changelog](https://github.com/Tyrrrz/LightBulb/blob/master/Changelog.md)

  notify:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Get release version
        id: get-version
        uses: tyrrrz/action-get-tag@v1

      - name: Notify Discord
        uses: tyrrrz/action-http-request@v1
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            ContentType: application/json; charset=UTF-8
          body: |
            {
              "content": "**LightBulb** new version released!\nVersion: `${{ steps.get-version.outputs.tag }}`\nChangelog: <https://github.com/Tyrrrz/LightBulb/blob/${{ steps.get-version.outputs.tag }}/Changelog.md>"
            }
